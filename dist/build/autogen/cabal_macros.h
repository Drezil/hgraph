/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package QuickCheck-2.5.1.1 */
#define VERSION_QuickCheck "2.5.1.1"
#define MIN_VERSION_QuickCheck(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  5 || \
  (major1) == 2 && (major2) == 5 && (minor) <= 1)

/* package Stream-0.4.6.1 */
#define VERSION_Stream "0.4.6.1"
#define MIN_VERSION_Stream(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 6)

/* package accelerate-0.13.0.5 */
#define VERSION_accelerate "0.13.0.5"
#define MIN_VERSION_accelerate(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  13 || \
  (major1) == 0 && (major2) == 13 && (minor) <= 0)

/* package base-4.5.0.0 */
#define VERSION_base "4.5.0.0"
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  5 || \
  (major1) == 4 && (major2) == 5 && (minor) <= 0)

/* package bytestring-0.9.2.1 */
#define VERSION_bytestring "0.9.2.1"
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  9 || \
  (major1) == 0 && (major2) == 9 && (minor) <= 2)

/* package deepseq-1.3.0.0 */
#define VERSION_deepseq "1.3.0.0"
#define MIN_VERSION_deepseq(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)

/* package ghc-7.4.1 */
#define VERSION_ghc "7.4.1"
#define MIN_VERSION_ghc(major1,major2,minor) (\
  (major1) <  7 || \
  (major1) == 7 && (major2) <  4 || \
  (major1) == 7 && (major2) == 4 && (minor) <= 1)

/* package monad-par-0.3.4.5 */
#define VERSION_monad_par "0.3.4.5"
#define MIN_VERSION_monad_par(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 4)

/* package parallel-3.2.0.4 */
#define VERSION_parallel "3.2.0.4"
#define MIN_VERSION_parallel(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  2 || \
  (major1) == 3 && (major2) == 2 && (minor) <= 0)

/* package text-0.11.3.1 */
#define VERSION_text "0.11.3.1"
#define MIN_VERSION_text(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  11 || \
  (major1) == 0 && (major2) == 11 && (minor) <= 3)

